---
sudo: required
dist: trusty
language: generic

env:
  - >
    container_id=$(mktemp)
    template=download
    distribution=centos
    version=7
    arch=amd64
    name=${distribution}
    EXTRA_VARS='{"role_name":"Rocket.Chat.Ansible","host_name":"localhost"}'
    VERBOSE='-vv'

before_install:
  - sudo apt-get -qq -y update &&
    sudo apt-get -qq -y install yum uidmap cgmanager-utils libcap-dev bridge-utils debootstrap
    {lxc,liblxc1,lxc1,libpam-cgfs,lxc-templates,python3-lxc}/trusty-backports

  - |
    mkdir -p lxc ~/.config/lxc;
    cat <<-EOF > ~/.config/lxc/default.conf
        lxc.include = /etc/lxc/default.conf
        lxc.id_map = u 0 100000 65536
        lxc.id_map = g 0 100000 65536
        lxc.network.type = veth
        lxc.network.link = lxcbr0
        lxc.aa_allow_incomplete = 1
    EOF

  - eval unset "${!XDG_*}";
    sudo usermod --add-subuids 100000-165536 $USER;
    sudo usermod --add-subgids 100000-165536 $USER;
    sudo restart cgmanager;
  - cat /proc/self/cgroup

script:
  - sudo cgm create all $USER;
    sudo cgm chown all $USER $(id -u) $(id -g);
    sudo cgm chown all '' $(id -u) $(id -g);
    cgm movepid all $USER $$; cat /proc/self/cgroup;
  - cat /proc/self/cgroup
  - lxc-create -t "${template}" -n "${name}"
    -- --dist "${distribution}" --release "${version}" --arch "${arch}"
  - lxc-start -n "${name}" -o logfile
  - lxc-attach -n "${name}" --
    yum -y install epel-release
  - lxc-attach -n "${name}" --
    yum -y install ansible curl wget sudo tar unzip
  - >
    lxc-attach -n "${name}" --
    ansible-playbook -i localhost,
    -c local "/$(basename $PWD)/tests/provision.yml"
    --extra-vars="${EXTRA_VARS}" --syntax-check $VERBOSE
  - >
    lxc-attach -n "${name}" --
    ansible-playbook -i localhost,
    -c local "/$(basename $PWD)/tests/provision.yml"
    --extra-vars="${EXTRA_VARS}" $VERBOSE

after_failure:
  - cat logfile

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
